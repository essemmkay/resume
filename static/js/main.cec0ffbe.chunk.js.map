{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","useState","displayHello","setDisplayHello","showProfile","setShowProfile","resume","name","age","streetAddress","city","country","contactNumber","skype","aboutMe","skills","technologies","databases","workHistory","companyName","startDate","Date","isPresentJob","designation","type","projects","description","duties","endDate","education","institute","tenure","degree","endingYear","className","speed","onFinishedTyping","src","theme","displayDataTypes","enableClipboard","style","backgroundColor","displayObjectSize","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yRA4IeA,MAvIf,WAAgB,IAAD,EAC2BC,oBAAS,GADpC,mBACNC,EADM,KACQC,EADR,OAEyBF,oBAAS,GAFlC,mBAENG,EAFM,KAEOC,EAFP,KAGTC,EAAS,CACXC,KAAM,qBACNC,IAAK,SACLC,cAAe,0DACfC,KAAM,aACNC,QAAS,WACTC,cAAe,eACfC,MAAO,cACPC,QAAS,qcACTC,OAAQ,CACNC,aAAc,CAAC,qBAAqB,SAAS,eAAe,kBAAkB,UAAU,UAAU,SAAS,4BAA4B,iBAAiB,SACxJC,UAAW,CAAC,aAAa,QAAQ,UAAU,YAE7CC,YAAa,CACX,CACEC,YAAa,6BACbC,UAAW,IAAIC,KAAK,aACpBC,cAAc,EACdC,YAAa,mCACbC,KAAM,YACNC,SAAU,CACR,CACElB,KAAM,SACNmB,YAAa,6GAEf,CACEnB,KAAM,cACNmB,YAAa,kEAGjBC,OAAQ,CAAC,qHAEX,CACER,YAAa,sBACbC,UAAW,IAAIC,KAAK,YACpBC,cAAc,EACdC,YAAa,mDACbC,KAAM,cACNC,SAAU,CACR,CACElB,KAAM,mBACNmB,YAAa,kHAEf,CACEnB,KAAM,iJACNmB,YAAa,2EAEf,CACEnB,KAAM,YACNmB,YAAa,gFAEf,CACEnB,KAAM,UACNmB,YAAa,oCACb,CACAnB,KAAM,SACNmB,YAAa,sEAInB,CACEP,YAAa,wBACbC,UAAW,IAAIC,KAAK,aACpBE,YAAa,uBACbC,KAAM,YACNI,QAAS,IAAIP,KAAK,aAClBI,SAAU,CAAC,CACTlB,KAAM,YACNmB,YAAa,yCAGjB,CACEP,YAAa,sBACbC,UAAW,IAAIC,KAAK,YACpBE,YAAa,uBACbC,KAAM,YACNI,QAAS,IAAIP,KAAK,cAEpB,CACEF,YAAa,oBACbC,UAAW,IAAIC,KAAK,YACpBE,YAAa,uBACbC,KAAM,YACNI,QAAS,IAAIP,KAAK,aAClBI,SAAU,CAAC,CACTlB,KAAM,OACNmB,YAAa,4DACb,CACAnB,KAAM,YACNmB,YAAa,oEAInBG,UAAW,CACT,CACEC,UAAW,oBACXC,OAAQ,cACRC,OAAQ,iCAEV,CACEF,UAAW,oDACXC,OAAQ,cACRC,OAAQ,mCAEV,CACEF,UAAW,4CACXG,WAAY,OACZD,OAAQ,sCAId,OACE,yBAAKE,UAAU,UACb,yBAAKA,UAAU,OACb,qEACA,kBAAC,IAAD,CAAQC,MAAO,GAAIC,iBAAkB,kBAAMjC,GAAgB,KAAO,uDAEnED,EAAgB,yBAAKgC,UAAU,OAC9B,+CACQ,KACThC,EAAgB,yBAAKgC,UAAU,OAC9B,qEACA,kBAAC,IAAD,CAAQC,MAAO,GAAIC,iBAAkB,kBAAM/B,GAAe,KAAO,sDACzD,KACTD,EAAe,yBAAK8B,UAAU,OAC7B,kBAAC,IAAD,CAAWG,IAAK/B,EAAQgC,MAAM,SAASC,kBAAkB,EAAOC,iBAAiB,EAAOC,MAAO,CAACC,gBAAiB,WAC/GnC,KAAM,KAAMoC,mBAAmB,KACzB,OC3HIC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.cec0ffbe.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport ReactJson from 'react-json-view'\nimport Typing from 'react-typing-animation';\n\nfunction App() {\n  const [displayHello, setDisplayHello] = useState(false);\n  const [showProfile, setShowProfile] = useState(false);\n  let resume = {\n    name: \"Syed Murtaz Haider\",\n    age: \"28 yrs\",\n    streetAddress: \"House # E-829, Street 36, Sector 2, Khayaban e Sir Syed\",\n    city: \"Rawalpindi\",\n    country: \"Pakistan\",\n    contactNumber: \"0323-5232371\",\n    skype: \"murtazkazmi\",\n    aboutMe: \"Talented Software developer with 5 years of application development experience in a broad range of fields, including desktop, mobile and web development. Solid understanding of full mobile and software development lifecycles, UI/UX, web analytics, changing web standards, and Agile methodologies. Dedicated to continuously developing, implementing, and adopting new technologies to maximize development efficiency and produce innovative applications.\",\n    skills: {\n      technologies: [\"Hyperledger Fabric\",\"DevOps\",\"React Native\",\"MEAN/MERN Stack\",\"Node JS\",\"SailsJS\",\"Heroku\",\"Amazon Web Services (AWS)\",\"Android Native\",\"Ionic\"],\n      databases: [\"SQL SERVER\",\"MySql\",\"MongoDB\",\"couchDb\"]\n    },\n    workHistory: [\n      {\n        companyName: \"Reactive Space - Islamabad\",\n        startDate: new Date(\"11/4/2019\"),\n        isPresentJob: true,\n        designation: \"Full Stack Developer / Team Lead\",\n        type: \"Full Time\",\n        projects: [\n          {\n            name: \"Tyslin\",\n            description: \"Crypto Wallet and Exchange with cold and hot wallets for Tyslin coin and other familiar cryptocurrencies.\"\n          },\n          {\n            name: 'GreenSecure',\n            description: \"Blockchain based solution for waste management and recycling.\"\n          }\n        ],\n        duties: [\"Full Stack Development on MEAN and MERN stacks, AWS deployment with EC2 and ECS, CI/CD using bitbucket pipelines\"]\n      },\n      {\n        companyName: \"Induent - Islamabad\",\n        startDate: new Date(\"6/1/2018\"),\n        isPresentJob: true,\n        designation: \"Senior Software Architect / Full Stack Developer\",\n        type: \"Consultancy\",\n        projects: [\n          {\n            name: \"SMIS - Treehouse\",\n            description: \"School Management System for an International School in Islamabad. App is available on playstore and app store\"\n          },\n          {\n            name: \"Al - Quran مصحف الأمير منصور بن مقرن \",\n            description: \"React Native Religious App. App is available on playstore and app store\"\n          },\n          {\n            name: \"WorkCycle\",\n            description: \"React Native services on demand. App is available on playstore and app store\"\n          },\n          {\n            name: \"SellNew\",\n            description: \"React native classified ads app.\"\n          },{\n            name: \"iTorah\",\n            description: \"Ionic Religious App. App is available on playstore and app store\"\n          }\n        ]\n      },\n      {\n        companyName: \"Locopixel - Islamabad\",\n        startDate: new Date(\"2/26/2018\"),\n        designation: \"MERN Stack Developer\",\n        type: \"Full Time\",\n        endDate: new Date(\"5/31/2018\"),\n        projects: [{\n          name: \"LocoShops\",\n          description: \"E-Commerce as a Service, MERN Stack\"\n        }]\n      },\n      {\n        companyName: \"IRM-PRP - Islamabad\",\n        startDate: new Date(\"9/1/2016\"),\n        designation: \"Full Stack Developer\",\n        type: \"Full Time\",\n        endDate: new Date(\"2/23/2018\")\n      },\n      {\n        companyName: \"SOFIT - Islamabad\",\n        startDate: new Date(\"9/1/2014\"),\n        designation: \"Full Stack Developer\",\n        type: \"Full Time\",\n        endDate: new Date(\"8/31/2016\"),\n        projects: [{\n          name: \"KEZA\",\n          description: \"Food Ordering, Restaurant Reservation, Food Delivery app\"\n        },{\n          name: \"RSHandler\",\n          description: \"HRMIS for a HR service provider for Mobilink, Warid, Ericsson\"\n        }]\n      }\n    ],\n    education: [\n      {\n        institute: \"COMSATS Islamabad\",\n        tenure: \"2011 - 2015\",\n        degree: \"Bachelors in Computer Science\"\n      },\n      {\n        institute: \"Fauji Foundation College, New Lalazar, Rawalpindi\",\n        tenure: \"2008 - 2010\",\n        degree: \"Intermediate - Computer Science\"\n      },\n      {\n        institute: \"Army Public School, Westridge, Rawalpindi\",\n        endingYear: \"2008\",\n        degree: \"Matriculation - Computer Science\"\n      }\n    ]\n  }\n  return (\n    <div className=\"resume\">\n      <div className=\"row\">\n        <span>essemmkayy@Macbook-Air ~ % &nbsp;&nbsp;</span>\n        <Typing speed={10} onFinishedTyping={() => setDisplayHello(true)}><span>node hello-world.js</span></Typing>\n      </div>\n      {displayHello ? (<div className=\"row\">\n        <span>Hello World!</span>\n      </div>) : null}\n      {displayHello ? (<div className=\"row\">\n        <span>essemmkayy@Macbook-Air ~ % &nbsp;&nbsp;</span>\n        <Typing speed={10} onFinishedTyping={() => setShowProfile(true)}><span>node essemmkayy.js</span></Typing>\n      </div>) : null}\n      {showProfile ? (<div className=\"row\">\n        <ReactJson src={resume} theme=\"brewer\" displayDataTypes={false} enableClipboard={false} style={{backgroundColor: \"#000000\"}}\n          name={null} displayObjectSize={false}/>\n      </div>) : null}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}